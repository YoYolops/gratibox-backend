{"version":3,"sources":["assets/landingPageImage.png","components/LandingPage.js","services/validate.js","components/Spinner.js","components/Alert.js","services/api.js","services/sign.js","services/signature.js","components/context/UserContext.js","components/Auth/Login.js","components/Auth/Signup.js","components/Auth/index.js","components/Plans/PlanCard.js","sharedStyles/index.js","components/LoadingPage.js","components/Plans/index.js","components/Subscribe/DropDown.js","components/Subscribe/Selector.js","components/Subscribe/SignCard.js","services/brasilApi.js","components/Subscribe/AddressCard.js","components/Subscribe/index.js","utils/utils.js","components/UserSignatures/UserSignatureCard.js","components/LogoutFooter.js","components/UserSignatures/index.js","App.js","index.js"],"names":["LandingPage","navigate","useNavigate","LandingContainer","UpperSection","className","BottomSection","onClick","styled","main","backgroundImage","section","Validate","registerBody","body","emptyness","isValid","name","length","message","emailRegex","test","email","password","key","trim","Spinner","color","size","SpinnerContainer","div","Alert","timerId","isOpen","toggle","useEffect","setTimeout","clearInterval","AlertContainer","initial","animate","variants","clearTimeout","opened","height","opacity","y","closed","motion","Api","axios","create","baseURL","process","post","response","succeeded","data","Sign","In","Up","createHeader","token","headers","Authorization","get","Signature","submit","getUserSignature","UserContext","createContext","UserProvider","children","useState","isLoading","setIsLoading","isSignatureDataLoading","setIsSignatureDataLoading","isUserDataLoading","setIsUserDataLoading","userData","setUserData","signatureData","setSignatureData","storagedData","localStorage","getItem","JSON","parse","then","res","Provider","value","storeUserDataLocally","setItem","stringify","resetApp","removeItem","Login","props","openAlert","setOpenAlert","alertMessage","setAlertMessage","setEmail","setPassword","useContext","log","useCallback","submitForm","e","document","addEventListener","removeEventListener","LoginContainer","layout","x","exit","transition","type","stiffness","damping","Title","placeholder","onChange","target","disabled","btText","h1","Signup","setname","passwordConfirmation","setPasswordConfirmation","register","validationResult","SignupContainer","Auth","hasAccount","toggleControl","setToggleControl","toggleHandler","prevState","AnimateSharedLayout","PlanCard","jsonAnimation","title","text","route","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","PlanCardContainer","whileHover","scale","options","width","isStopped","isPaused","SelectPlan","whileTap","backgroundColor","preventDefault","button","PlansContainer","LoadingPage","setMessage","dotsQuantity","setDotsQuantity","messages","timeoutId","prev","LoadingPageContainer","Plans","split","weeklyMeditation","monthlyMeditation","DropDown","isClicked","setIsClicked","direction","animationState","setAnimationState","animation","Expander","bottomSectionVariants","active","delay","unactive","pointerEvents","duration","Selector","initialValue","onSelect","optionText","products","unique","selected","setSelected","allowUnselect","setAllowUnselect","counter","calculateHowManyProductsAreSelected","SelectorContainer","MotionSquare","OptionText","unselected","p","SignCard","setPrevData","prevData","signCard","planType","setPlanType","deliveryDay","setDeliveryDay","incense","productId","tea","organicProducts","setProducts","SignCardContainer","BrasilCepApi","cep","AddressCard","setSelectionStage","forceLoading","blockChanges","setBlockChanges","alertActive","setAlertActive","addressCard","addressee","setAddressee","address","setAddress","setCep","city","setCity","uf","setUf","complement","setComplement","loadingAnimation","searchCep","getCepData","result","state","street","neighborhood","AddressCardContainer","defaultValue","Subscribe","isLoadingLocally","setIsLoadingLocally","isActive","alertManagementData","setAlertManagementData","selectionStage","useParams","AnimatePresence","NextButton","mapableProducts","Object","keys","userId","id","planId","day","map","filter","Boolean","validationBody","submitSignatureRequest","boolean","Utils","formatDate","inputDate","splitted","dayjs","format","getNextDayOfTheWeek","dayName","excludeToday","refDate","Date","dayOfWeek","indexOf","slice","toLowerCase","setHours","setDate","getDate","getDay","calculateNextDeliveryDay","referenceObj","nextDeliveryDay","reference","getMonth","getFullYear","UserSignatureCard","signature","created_at","first","second","third","today","Number","monthDay","date","thisDate","newDate","calculateNextDeliveries","item","index","product","LogoutFooter","FooterContainer","UserSignature","to","App","exact","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.690f09a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/landingPageImage.88c613bd.png\";","import styled from \"styled-components\";\nimport backgroundImage from \"../assets/landingPageImage.png\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function LandingPage() {\n    const navigate = useNavigate();\n\n    return (\n        <LandingContainer>\n            <UpperSection>\n                <h1 className=\"Title\">Bem vindo ao GratiBox</h1>\n                <p className=\"SubTitle\">Receba em casa um box com chás, produtos organicos, incensos e muito mais...</p>\n            </UpperSection>\n\n            <BottomSection>\n                <button className=\"PrimaryButton\" onClick={() => { navigate(\"/auth/sign\") }}>Quero começar</button>\n                <button className=\"SecondaryButton\" onClick={() => { navigate(\"/auth/log\") }}>Já sou grato</button>\n            </BottomSection>\n        </LandingContainer>\n    )\n}\n\nconst LandingContainer = styled.main`\n    height: 100vh;\n    width: 100vw;\n    background-image: url(${backgroundImage});\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-size: cover;\n    background-position: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    padding: 20px 20px 40px 20px;\n`\n\nconst UpperSection = styled.section`\n    width: 100%;\n    color: #fff;\n    text-align: center;\n    max-width: 1000px;\n\n    .Title {\n        font-family: 'Roboto', sans-serif;\n        font-size: 1.7rem;\n        font-weight: 700;\n        margin: 20px 0px 40px 0px;\n        cursor: pointer;\n    }\n\n    .SubTitle {\n        font-family: 'Roboto', sans-serif;\n        font-size: 1rem;\n        font-weight: 400;\n        cursor: pointer;\n    }\n`\n\nconst BottomSection = styled.section`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    max-width: 1000px;\n\n    .PrimaryButton {\n        width: 200px;\n        padding: 10px 20px;\n        color: #fff;\n        background-color: #8C97EA;\n        align-self: center;\n        border: none;\n        border-radius: 5px;\n        margin-bottom: 5px;\n        font-weight: 600;\n    }\n\n    .SecondaryButton {\n        width: 200px;\n        padding: 10px 20px;\n        color: #fff;\n        background: transparent;\n        align-self: center;\n        border: none;\n        font-weight: 600;\n    }\n`","const Validate = {\n    registerBody,\n    emptyness\n}\n\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nfunction registerBody(body) {\n    if(!emptyness(body).isValid) return {\n        isValid: false,\n        message: \"Auummmm... preencha todos os campos\"\n    }\n\n    if(body.name.length < 2) return {\n        isValid: false,\n        message: \"Uma andorinha não faz o verão, uma letra não faz um nome\"\n    }\n    if(!emailRegex.test(body.email)) return {\n        isValid: false,\n        message: \"Insira um e-mail zen\"\n    }\n    if(body.password.length < 6) return {\n        isValid: false,\n        message: \"Sua senha precisa ter ao menos 6 caracteres good vibes\"\n    }\n    return {\n        isValid: true\n    }\n}\n\nfunction emptyness(body) {\n    for(const key in body) {\n        if((!body[key] || `${body[key]}`.trim() === \"\") && body[key] !== 0) return {\n            isValid: false,\n            message: \"Preencha todos os campos\"\n        }\n    }\n    return {\n        isValid: true\n    }\n}\n\nexport default Validate;","import { CgSpinnerAlt } from 'react-icons/cg';\nimport styled from 'styled-components';\n\nexport default function Spinner({ color, size }) {\n    return (\n        <SpinnerContainer>\n            <CgSpinnerAlt className=\"spinner\" size={ size ? size : 25} color={color ? color : \"#8C11BE\"}/>\n        </SpinnerContainer>\n    )\n}\n\nconst SpinnerContainer = styled.div`\n    background: transparent;\n    .spinner {\n        animation: rotate 1s linear infinite;\n    }\n    \n    @keyframes rotate {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n`","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport { useEffect } from \"react\";\n\n\nexport default function Alert({ isOpen, message, toggle }) {\n    let timerId;\n\n    useEffect(() => {\n        if(isOpen) {\n            timerId = setTimeout(() => {\n                toggle(false)\n            }, 4000)\n        }\n\n        return () => { clearInterval(timerId) }\n    }, [isOpen])\n\n    function close() {\n        clearTimeout(timerId)\n        toggle(false)\n    }\n\n    return (\n        <AlertContainer\n            initial=\"closed\"\n            animate={isOpen ? \"opened\" : \"closed\"}\n            variants={variants}\n        >\n            <AiFillCloseCircle size={20} color=\"#fff\" onClick={close}/>\n            <h1>Ops!</h1>\n            <p>{message}</p>\n        </AlertContainer>\n    )\n}\n\nconst variants = {\n    opened: {\n        height: \"unset\",\n        opacity: 1,\n        y: 10\n    },\n    closed: {\n        height: 0,\n        opacity: 0,\n        y: -80,\n    }\n}\n\nconst AlertContainer = styled(motion.div)`\n    width: 100vw;\n    max-width: 600px;\n    position: fixed;\n    top: 10px;\n    left: 0px;\n    background-color: #f74f4f;\n    color: #fff;\n    border-radius: 4px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 15px 10px 10px 10px;\n\n    >svg {\n        position: absolute;\n        top: 5px;\n        right: 5px;\n    }\n\n    >h1 {\n        font-size: 1.4rem;\n        margin-bottom: 10px;\n        border-bottom: 1px solid #fff;\n        font-weight: 700;\n    }\n\n    >p {\n        text-align: center;\n        font-weight: 500;\n    }\n`","import axios from \"axios\";\n\nconst Api = axios.create({\n    baseURL: process.env.REACT_APP_SERVER_URL\n})\n\nexport default Api;","import Api from \"./api.js\"\n\nconst Sign = {\n    In,\n    Up\n}\n\nasync function In(body) {\n    try {\n        const response = await Api.post(\"/login\", body)\n\n        return {\n            succeeded: true,\n            data: response.data\n        }\n    } catch(e) {\n        return {\n            succeeded: false,\n            message: e.message\n        }\n    }\n}\n\nasync function Up(body) {\n\n    try {\n        const response = await Api.post(\"/register\", body)\n\n        return {\n            succeeded: true,\n            data: response.data\n        }\n    } catch(e) {\n        return {\n            succeeded: false,\n            message: e.message\n        }\n    }\n}\n\nexport default Sign;","import Api from \"./api\";\n\nconst Signature = {\n    submit,\n    getUserSignature\n}\n\nfunction createHeader(token) {\n    return {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n}\n\nasync function submit(token, body) {\n    try {\n        const response = await Api.post(\"/signature\", body, createHeader(token))\n        return {\n            succeeded: true,\n            data: response.data\n        }\n    } catch(e) {\n        return {\n            succeeded: false,\n            message: e.message\n        }\n    }\n}\n\nasync function getUserSignature(token) {\n    try {\n        const response = await Api.get(\"/signature\", createHeader(token))\n        return {\n            succeeded: true,\n            data: response.data\n        }\n    } catch(e) {\n        return {\n            succeeded: false,\n            message: e.message\n        }\n    }\n}\n\nexport default Signature","import { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Signature from \"../../services/signature\";\n\nconst UserContext = createContext({});\n\nexport function UserProvider({ children }) {\n    const navigate = useNavigate()\n    const [ isLoading, setIsLoading ] = useState(true)\n    const [ isSignatureDataLoading, setIsSignatureDataLoading ] = useState(true)\n    const [ isUserDataLoading, setIsUserDataLoading ] = useState(true)\n    const [ userData, setUserData ] = useState({})\n    const [ signatureData, setSignatureData ] = useState([])\n\n    useEffect(() => {\n        const storagedData = localStorage.getItem(\"gratibox\");\n\n        if(storagedData) {\n            const data = JSON.parse(storagedData)\n            setUserData(data)\n        }\n        setIsUserDataLoading(false)\n    }, [])\n\n    useEffect(() => {\n        if(userData.token) {\n            Signature.getUserSignature(userData.token)\n            .then(res => {\n                if(res.succeeded) {\n                    setSignatureData(res.data)\n                    setIsSignatureDataLoading(false)\n                } else {\n                    setIsSignatureDataLoading(false)\n                }\n            })\n        }\n        setIsSignatureDataLoading(false)\n    }, [ userData, navigate ])\n\n    useEffect(() => {\n        if(!isUserDataLoading && !isSignatureDataLoading) setIsLoading(false)\n    }, [ isUserDataLoading, isSignatureDataLoading, setIsLoading ])\n\n    function storeUserDataLocally(data) {\n        localStorage.setItem(\"gratibox\", JSON.stringify(data))\n    }\n\n    function resetApp() {\n        localStorage.removeItem(\"gratibox\")\n        setUserData({})\n        setSignatureData([])\n        navigate(\"/\")\n    }\n\n\n    return (\n        <UserContext.Provider value={{\n            userData,\n            storeUserDataLocally,\n            setUserData,\n            isLoading,\n            signatureData,\n            resetApp\n        }}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserContext;","import { useState, useContext, useEffect, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport Validate from \"../../services/validate\";\nimport Spinner from \"../Spinner\";\nimport Alert from \"../Alert\";\nimport Sign from \"../../services/sign.js\";\nimport UserContext from \"../context/UserContext\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Login(props) {\n    const navigate = useNavigate();\n    const [ openAlert, setOpenAlert ] = useState(false);\n    const [ alertMessage, setAlertMessage ] = useState(\"\")\n    const [ isLoading, setIsLoading ] = useState(false);\n    const [ email, setEmail ] = useState(\"\");\n    const [ password, setPassword ] = useState(\"\");\n    const { setUserData, storeUserDataLocally } = useContext(UserContext);\n\n    const log = useCallback(() => {\n        const validation = Validate.emptyness({\n            email,\n            password\n        })\n\n        if(!validation.isValid) {\n            setAlertMessage(\"Preencha todos os zen, digo, campos\")\n            setOpenAlert(true)\n            return;\n        }\n\n        setIsLoading(true)\n\n        Sign.In({\n            email,\n            password\n        })\n        .then(res => {\n            if(res.succeeded) {\n                storeUserDataLocally(res.data);\n                setUserData(res.data);\n                navigate(\"/main\");\n            } else {\n                setAlertMessage(\"Usuário inválido ou ingrato\")\n                setOpenAlert(true)\n                setIsLoading(false)\n            }\n        })\n    }, [ email, password, navigate, setUserData, storeUserDataLocally ])\n\n    const submitForm = useCallback(e => {\n        if(e.key === \"Enter\"){\n            log()\n        }\n    }, [ log ])\n\n    useEffect(()=> {\n        document.addEventListener(\"keydown\", submitForm)   \n\n        return () => document.removeEventListener('keydown', submitForm) \n    }, [ submitForm ])\n\n\n    return (\n        <LoginContainer\n            layout\n            initial={{ x: 300, opacity: 1 }}\n            animate={{ x: 0, opacity: 1 }}\n            exit={{ x: -300, opacity: 1 }}\n            transition={{\n                x: {\n                    type: \"spring\",\n                    stiffness: 250,\n                    damping: 20\n                }\n            }}\n        >\n            <Alert isOpen={openAlert} toggle={setOpenAlert} message={alertMessage} />\n            <Title>Bom te ver de novo!</Title>\n            <input \n                type=\"email\"\n                placeholder=\"E-mail\"\n                onChange={ e => setEmail(e.target.value) }\n                disabled={isLoading}\n                value={email}\n            />\n            <input \n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={ e => setPassword(e.target.value) }\n                disabled={isLoading}\n                value={password}\n            />\n            <button className=\"signer\" onClick={log}>{\n                isLoading\n                    ? <Spinner color=\"#fff\"/>\n                    : \"Entrar\"\n            }</button>\n\n            <button className=\"toggler\" onClick={props.toggle}>\n                {props.btText}\n            </button>\n        </LoginContainer>\n    )\n}\n\nconst LoginContainer = styled(motion.div)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    height: 100vh;\n    overflow: hidden;\n    background-color: #6D7CE4;\n    position: fixed;\n    width: 100%;\n    top: 0;\n\n    input {\n        height: 58px;\n        width: 100%;\n        border-radius: 5px;\n        border: none;\n        outline: none;\n        margin: 7px 0px;\n        padding: 15px;\n        font-size: 20px;\n        max-width: 350px;\n    }\n    .signer {\n        border: none;\n        outline: none;\n        height: 46px;\n        width: 100%;\n        max-width: 350px;\n        font-family: 'Raleway', sans-serif;\n        border-radius: 5px;\n        background-color: #8C97EA;\n        font-size: 17px;\n        color: #fff;\n        font-weight: bolder;\n        margin: 20px 0px 0px 0px;\n        cursor: pointer;\n        max-width: 200px;\n    }\n    .toggler {\n        color: #fff;\n        font-size: 15px;\n        font-weight: 700;\n        margin-top: 20px;\n        cursor: pointer;\n        background-color: inherit;\n        border: none;\n        outline: none;\n    }\n`\n\nconst Title = styled.h1`\n    color: #fff;\n    font-size: 32px;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 60px;\n    font-family: 'Roboto', sans-serif;\n    font-weight: 500;\n`","import { useState, useEffect, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport Spinner from \"../Spinner\";\nimport Validate from \"../../services/validate\";\nimport Alert from \"../Alert\";\nimport Sign from \"../../services/sign.js\";\n\nexport default function Signup(props) {\n    const [ openAlert, setOpenAlert ] = useState(false)\n    const [ alertMessage, setAlertMessage ] = useState(false)\n    const [ name, setname ] = useState(\"\");\n    const [ email, setEmail ] = useState(\"\");\n    const [ password, setPassword ] = useState(\"\");\n    const [ passwordConfirmation, setPasswordConfirmation ] = useState(\"\");\n    const [ isLoading, setIsLoading ] = useState(false);\n   \n    const register = useCallback(() => {\n        const validationResult = Validate.registerBody({\n            name,\n            email,\n            password\n        })\n\n        if(password !== passwordConfirmation) {\n            setOpenAlert(true)\n            setAlertMessage(\"A confirmação de senha não está igual à senha\")\n            return;\n        }\n\n        if(!validationResult.isValid) {\n            setAlertMessage(validationResult.message)\n            setOpenAlert(true)\n            return;\n        }\n\n        setIsLoading(true)\n        Sign.Up({name, email, password})\n            .then(res => {\n                if(res.succeeded) {\n                    props.toggle()\n                } else {\n                    setAlertMessage(res.message)\n                    setOpenAlert(true)\n                    setIsLoading(false)\n                }\n            })\n    }, [ name, email, password, setOpenAlert, setAlertMessage, setIsLoading, passwordConfirmation, props ])\n\n    const submitForm = useCallback(e => {\n        if(e.key === \"Enter\"){\n            register()\n        }\n    }, [ register ])\n\n    useEffect(()=> {\n        document.addEventListener(\"keydown\", submitForm)   \n\n        return () => document.removeEventListener('keydown', submitForm) \n    }, [ submitForm ])\n\n\n    return (\n        <SignupContainer\n            layout\n            initial={{ x: -300, opacity: 1 }}\n            animate={{ x: 0, opacity: 1 }}\n            exit={{ x: 300, opacity: 1 }}\n            transition={{\n                x: {\n                    type: \"spring\",\n                    stiffness: 250,\n                    damping: 20\n                }\n            }}\n        >\n            <Alert isOpen={openAlert} toggle={setOpenAlert} message={alertMessage} />\n            <Title>Bem vindo ao GratiBox</Title>\n            <input \n                type=\"text\"\n                placeholder=\"Name\"\n                onChange={ e => setname(e.target.value) }\n                value={name}\n            />\n            <input \n                type=\"email\"\n                placeholder=\"E-mail\"\n                onChange={ e => setEmail(e.target.value) }\n                value={email}\n            />\n            <input \n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={ e => setPassword(e.target.value) }\n                value={password}\n            />\n            <input \n                type=\"password\"\n                placeholder=\"Confirm password\"\n                onChange={ e => setPasswordConfirmation(e.target.value) }\n                value={passwordConfirmation}\n            />\n            <button className=\"signer\" onClick={register} >{\n                isLoading\n                    ? <Spinner color=\"#fff\"/>\n                    : \"Cadastrar\"\n            }</button>\n\n            <button className=\"toggler\" onClick={props.toggle}>\n                {props.btText}\n            </button>\n        </SignupContainer>\n    )\n}\n\nconst SignupContainer = styled(motion.div)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    height: 100vh;\n    overflow: hidden;\n    background-color: #6D7CE4;\n    position: fixed;\n    width: 100%;\n    top: 0;\n\n    input {\n        height: 58px;\n        width: 100%;\n        border-radius: 5px;\n        border: none;\n        outline: none;\n        margin: 7px 0px;\n        padding: 15px;\n        font-size: 20px;\n        max-width: 350px;\n    }\n    .signer {\n        border: none;\n        outline: none;\n        height: 46px;\n        width: 100%;\n        max-width: 350px;\n        font-family: 'Raleway', sans-serif;\n        border-radius: 5px;\n        background-color: #8C97EA;\n        font-size: 17px;\n        color: #fff;\n        font-weight: bolder;\n        margin: 20px 0px 0px 0px;\n        cursor: pointer;\n        max-width: 200px;\n    }\n    .toggler {\n        color: #fff;\n        font-size: 15px;\n        font-weight: 700;\n        margin-top: 20px;\n        cursor: pointer;\n        background-color: inherit;\n        border: none;\n        outline: none;\n    }\n`\n\nconst Title = styled.h1`\n    color: #fff;\n    font-size: 32px;\n    width: 100%;\n    text-align: center;\n    font-family: 'Roboto', sans-serif;\n    font-weight: 500;\n    margin-bottom: 20px;\n`","import { useContext, useEffect, useState } from \"react\";\nimport { AnimateSharedLayout } from \"framer-motion\";\nimport { useNavigate } from \"react-router\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport UserContext from \"../context/UserContext\";\n\nexport default function Auth({ hasAccount }) {\n    const navigate = useNavigate()\n    const [ toggleControl, setToggleControl ] = useState(hasAccount);\n    const { userData, isLoading } = useContext(UserContext)\n\n    useEffect(() => {\n        if(!isLoading && userData.token) navigate(\"/plans\")\n    }, [ userData, isLoading, navigate ])\n\n    function toggleHandler() {\n        setToggleControl(prevState => !prevState)\n    }\n\n    return (\n        <AnimateSharedLayout>{\n            toggleControl\n                ? <Login btText=\"Ainda não sou grato\" toggle={toggleHandler} />\n                : <Signup btText=\"Já sou grato\" toggle={toggleHandler} />\n        }</AnimateSharedLayout>\n    )\n}","import styled from \"styled-components\";\nimport Lottie from \"react-lottie\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function PlanCard({ jsonAnimation, title, text, route }) {\n    const navigate = useNavigate();\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: jsonAnimation,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n\n    return (\n        <PlanCardContainer whileHover={{ scale: 1.06 }}>\n            <Title>{title}</Title>\n            <div>\n                <Lottie\n                    options={defaultOptions}\n                    width={\"100%\"}\n                    height={\"inherit\"}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            </div>\n            <p>{text}</p>\n            <SelectPlan\n                whileTap={{ scale: 0.98, backgroundColor: \"#6D7CE4\" }}\n                onClick={e => {\n                    e.preventDefault()\n                    navigate(route)\n                }}\n            >Assinar</SelectPlan>\n        </PlanCardContainer>\n    )\n}\n\nconst PlanCardContainer = styled(motion.div)`\n    width: 100%;\n    background-color: #E5CDB3;\n    margin-bottom: 15vw;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    border-radius: 15px;\n    color: #4D65A8;\n\n    >div {\n        width: 100%;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        pointer-events: none;\n\n        >svg {\n            pointer-events: none;\n            z-index: -5;\n        }\n    }\n\n    >p {\n        font-size: 1.2rem;\n        font-weight: 500;\n        padding: 20px;\n        line-height: 1.4rem;\n    }\n`\n\nconst Title = styled.h1`\n    font-size: 1.6rem;\n    font-weight: 700;\n    text-shadow: 1px 1px #4D65A8;\n`\n\nconst SelectPlan = styled(motion.button)`\n    height: 40px;\n    width: 160px;\n    border: none;\n    background-color: #8C97EA;\n    border-radius: 5px;\n    color: #fff;\n    font-size: 1.2rem;\n    font-weight: 600;\n    text-shadow: 1px 1px #fff;\n    box-shadow: 3px 3px #7c89dd;\n`","import styled from \"styled-components\";\n\nexport const PlansContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    color: #fff;\n    padding: 60px 20px 20px 20px;\n    width: 100%;\n    max-width: 600px;\n    align-self: center;\n    margin: 0 auto;\n\n    >h1 {\n        font-size: 1.6rem;\n        font-weight: 700;\n        margin-bottom: 40px;\n        width: 100%;\n        text-align: left;\n    }\n\n    >h2 {\n        font-size: 1rem;\n        font-weight: 400;\n        margin-bottom: 60px;\n        width: 100%;\n        text-align: left;\n        line-height: 1.2rem;\n    }\n\n    a {\n        font-size: 1.3rem;\n        border-bottom: 2px solid #fff;\n    }\n`","import styled from \"styled-components\";\nimport LoadingAnimation from \"../assets/loadingAnimation.json\";\nimport Lottie from \"react-lottie\";\nimport { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nexport default function LoadingPage() {\n    const [ message, setMessage ] = useState(\"Aguarde\")\n    const [ dotsQuantity, setDotsQuantity ] = useState(1)\n\n    const messages = {\n        \"0\": \"Aguarde.\",\n        \"1\": \"Aguarde..\",\n        \"2\": \"Aguarde...\"\n    }\n\n    useEffect(() => {\n        \n        const timeoutId = setTimeout(() => {\n            setMessage(messages[dotsQuantity%3])\n            setDotsQuantity(prev => prev + 1)\n        }, 1000)\n\n        return () => { \n            clearTimeout(timeoutId)\n        }\n    })\n\n\n\n      return (\n          <LoadingPageContainer\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n          >\n              <div className=\"AnimationContainer\">\n                <Lottie\n                    options={defaultOptions}\n                    width={\"100%\"}\n                    height={\"auto\"}\n                    isStopped={false}\n                    isPaused={false}\n                />\n              </div>\n              <div className=\"TextContainer\">\n                <p className=\"Dots\">{message}</p>\n                <p className=\"StaticText\">Estamos alinhando os chackras</p>\n              </div>\n          </LoadingPageContainer>\n      )\n}\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true, \n    animationData: LoadingAnimation,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n};\n\nconst LoadingPageContainer = styled(motion.div)`\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    .AnimationContainer {\n        width: 100%;\n        max-width: 1000px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        pointer-events: none;\n\n        >svg {\n            pointer-events: none;\n        }\n    }\n\n    .TextContainer {\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n        flex-direction: column;\n\n        .Dots {\n            font-size: 1.6rem;\n            color: #fff;\n            margin-bottom: 20px;\n            position: fixed;\n            bottom: 80px;\n            left: calc(50vw - 50px)\n        }\n\n        .StaticText {\n            color: #fff;\n            font-size: 1.2rem;\n            margin-top: 20px;\n        }\n    }\n`","import weeklyMeditation from \"../../assets/weeklyMeditation.json\";\nimport monthlyMeditation from \"../../assets/monthlyMeditation.json\";\nimport { useContext, useEffect } from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport { useNavigate } from \"react-router\";\nimport PlanCard from \"./PlanCard\";\nimport { PlansContainer } from \"../../sharedStyles\";\nimport LoadingPage from \"../LoadingPage\";\n\nexport default function Plans() {\n    const navigate = useNavigate()\n    const { userData, isLoading, signatureData } = useContext(UserContext)\n    const weeklyText = \"Você recebe um box por semana, ideal para quem quer exercer a gratidão todos os dias\"\n    const monthlyText = \"Você recebe um box por mês, ideal para quem está começando agora\"\n\n    useEffect(() => {\n        if(!isLoading && !userData.token) navigate(\"/auth/log\")\n        else if(!isLoading && signatureData.length) navigate(\"/signatures/\")\n        \n    }, [ navigate, userData, isLoading, signatureData ])\n\n    if(isLoading || !userData.token) return <LoadingPage />\n\n    return (\n        <PlansContainer>\n            <h1>{`Bom te ver por aqui, ${userData.name?.split(\" \")[0]}`}</h1>\n            <h2>Você ainda não assinou um plano, que tal começar agora?</h2>\n\n            <PlanCard jsonAnimation={weeklyMeditation} title=\"Plano Semanal\" text={weeklyText} route=\"/subscribe/weekly\"/>\n            <PlanCard jsonAnimation={monthlyMeditation} title=\"Plano Mensal\" text={monthlyText} route=\"/subscribe/monthly\" />\n        </PlansContainer>\n    )\n}\n","import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport animation from \"../../assets/dropDown.json\";\nimport Lottie from \"react-lottie\";\n\nexport default function DropDown({ title, children }) {\n    const [ isClicked, setIsClicked ] = useState(false)\n    const [ animationState, setAnimationState ] = useState({\n        isStopped: true, isPaused: false, direction: -1\n    })\n\n    const defaultOptions = {\n        loop: false,\n        autoplay: false, \n        animationData: animation,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n\n    return (\n        <Expander\n            initial=\"unactive\"\n            animate={ isClicked ? \"active\" : \"unactive\" }\n            variants={variants}\n        >\n            <UpperSection\n                onClick={() => {\n                    setAnimationState(prev => ({\n                        ...prev,\n                        isStopped: false,\n                        direction: prev.direction === 1\n                            ? -1\n                            : 1\n                    }))\n                    setIsClicked(prev => !prev)\n                }}\n            >\n                <h1>{title}</h1>\n                <div className=\"ArrowAnimationContainer\">\n                    <Lottie\n                        options={defaultOptions}\n                        width={\"100%\"}\n                        height={\"inherit\"}\n                        isStopped={animationState.isStopped}\n                        isPaused={animationState.isPaused}\n                        direction={animationState.direction}\n                    />\n                </div>\n            </UpperSection>\n            \n            <BottomSection\n                initial=\"unactive\"\n                animate={ isClicked ? \"active\" : \"unactive\" }\n                variants={bottomSectionVariants}\n            >{\n                children\n            }</BottomSection>\n        </Expander>       \n    )\n}\n\nconst variants = {\n    active: {\n        height: \"unset\",\n        transition: {\n            type: \"spring\",\n            delay: 0,\n            damping: 25,\n            stiffness: 200\n        },\n    },\n    unactive: {\n        height: \"40px\",\n    }\n}\n\nconst bottomSectionVariants = {\n    active: {\n        opacity: 1,\n        pointerEvents: \"unset\",\n        transition: {\n            delay: .3,\n        },\n    },\n    unactive: {\n        opacity: 0,\n        pointerEvents: \"none\",\n        transition: {\n            duration: .1,\n        },\n    }\n}\n\nconst Expander = styled(motion.div)`\n    background-color: #E0D1ED;\n    padding: 7px;\n    border-radius: 5px;\n    margin-bottom: 20px;\n`\n\nconst UpperSection = styled.section`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    cursor: pointer;\n\n    .ArrowAnimationContainer {\n        height: 25px;\n    }\n\n    >h1 {\n        color: #4D65A8;\n        font-size: 1.2rem;\n        font-weight: 700;\n    }\n`\n\nconst BottomSection = styled(motion.div)`\n\n`","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\n\nexport default function Selector({ initialValue, onSelect, optionText, products, unique }) {\n    const [ selected, setSelected ] = useState(initialValue)\n    const [ allowUnselect, setAllowUnselect ] = useState(unique)\n\n    useEffect(() => {\n        setSelected(initialValue)\n    }, [ initialValue ])\n\n    useEffect(() => {\n        function calculateHowManyProductsAreSelected() {\n            let counter = 0;\n            for(const key in products) {\n                if(products[key].selected) counter += 1\n            }\n            return counter\n        }\n        if(!unique) {\n            setAllowUnselect(calculateHowManyProductsAreSelected() > 1)\n        }\n    }, [ products, unique ])\n\n    return (\n        <SelectorContainer onClick={() => {\n            if(unique) {\n                if(!initialValue) setSelected(prev => !prev)\n                onSelect()\n            } else if(allowUnselect) {\n                setSelected(prev => !prev)\n                onSelect()\n\n            } else {\n                if(!selected) {\n                    setSelected(prev => !prev)\n                    onSelect()\n                }\n            }\n            \n        }}>\n            <div>\n                <MotionSquare\n                    initial=\"unselected\"\n                    animate={ selected ? \"selected\" : \"unselected\" }\n                    variants={variants}\n                />\n            </div>\n            <OptionText selected={selected}>{optionText}</OptionText>\n        </SelectorContainer>\n    )\n}\n\nconst variants = {\n    selected: {\n        scale: 1\n    },\n    unselected: {\n        scale: 0\n    }\n}\n\nconst SelectorContainer = styled.div`\n    width: 100%;\n    background-color: inherit;\n    color: #4D65A8;\n    padding-top: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n\n    >div {\n        width: 20px;\n        height: 20px;\n        background-color: #fff;\n        margin-right: 10px;\n    }\n`\n\nconst MotionSquare = styled(motion.div)`\n    background-color: #4D65A8;\n    width: 100%;\n    height: 100%;\n`\n\nconst OptionText = styled.p`\n    font-weight: ${props => props.selected ? 700 : 400};\n`","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport Lottie from \"react-lottie\";\nimport animation from \"../../assets/subscribeMeditation.json\";\nimport DropDown from \"./DropDown\";\nimport Selector from \"./Selector\";\n\n\nexport default function SignCard({ type, setPrevData, prevData }) {\n    const [ planType, setPlanType ] = useState(prevData.signCard.planType || type)\n    const [ deliveryDay, setDeliveryDay ] = useState(prevData.signCard.deliveryDay || 0)\n    const [ products, setProducts ] = useState(prevData.signCard.products || {\n        incense: { productId: 1, selected: true },\n        tea: { productId: 2, selected: false },\n        organicProducts: { productId:3, selected: false }\n    })\n\n    useEffect(() => {\n\n        return () => { setPrevData(prev => ({\n            ...prev,\n            signCard: {\n                planType,\n                deliveryDay,\n                products\n            }\n        }))}\n\n    }, [ planType, deliveryDay, products, setPrevData ])\n\n    return (\n        <SignCardContainer\n            layout\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1, transition: { duration: .12, delay: .12 } }}\n            exit={{ opacity: 0, transition: { duration: .18 } }}\n        >\n            <UpperSection>\n                <Lottie\n                    options={defaultOptions}\n                    width={\"100%\"}\n                    height={\"inherit\"}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            </UpperSection>\n\n            <DropDown title=\"Plano\">\n                <Selector \n                    initialValue={planType === \"weekly\"}\n                    optionText=\"Semanal\"\n                    onSelect={() => { setPlanType(\"weekly\") }} \n                    unique={true}/>\n                <Selector \n                    initialValue={planType === \"monthly\"}\n                    optionText=\"Mensal\"\n                    onSelect={() => { setPlanType(\"monthly\") }} \n                    unique={true} />\n            </DropDown>\n\n            <DropDown title=\"Entrega\">\n                <Selector\n                    initialValue={deliveryDay === 0}\n                    optionText={planType === \"weekly\" ? \"Segunda-feira\" : \"Dia 01\"} \n                    onSelect={() => { setDeliveryDay(0) }} \n                    unique={true} />\n                <Selector\n                    initialValue={deliveryDay === 1}\n                    optionText={planType === \"weekly\" ? \"Quarta-feira\" : \"Dia 10\"} \n                    onSelect={() => { setDeliveryDay(1) }}\n                    unique={true} />\n                <Selector\n                    initialValue={deliveryDay === 2}\n                    optionText={planType === \"weekly\" ? \"Sexta-feira\" : \"Dia 20\"} \n                    onSelect={() => { setDeliveryDay(2) }}\n                    unique={true} />\n            </DropDown>\n\n            <DropDown title=\"Quero Receber\">\n                <Selector\n                    initialValue={products.incense.selected}\n                    optionText=\"Incensos\" \n                    onSelect={() => { setProducts(prev => ({ ...prev, incense: { productId: 1, selected: !prev.incense.selected } })) }} \n                    unique={false}\n                    products={products}/>\n                <Selector\n                    initialValue={products.tea.selected}\n                    optionText=\"Chás\" \n                    onSelect={() => { setProducts(prev => ({ ...prev, tea: { productId: 2, selected: !prev.tea.selected } })) }} \n                    unique={false}\n                    products={products}/>\n                <Selector\n                    initialValue={products.organicProducts.selected}\n                    optionText=\"Produtos Orgânicos\"\n                    onSelect={() => { setProducts(prev => ({ ...prev, organicProducts: { productId: 3, selected: !prev.organicProducts.selected } })) }} \n                    unique={false}\n                    products={products}/>\n            </DropDown>\n        </SignCardContainer>\n    )\n}\n\nconst SignCardContainer = styled(motion.div)`\n    background-color: #fff;\n    width: 100%;\n    border-radius: 10px;\n    padding: 0px 20px 10px 20px;\n    margin-bottom: 20px;\n`\n\nconst UpperSection = styled.div`\n    width: 100%;\n    pointer-events: none;\n\n    >svg {\n        pointer-events: none;\n    }\n`\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true, \n    animationData: animation,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n};\n","import axios from \"axios\";\n\nconst BrasilCepApi = axios.create({\n    baseURL: \"https://brasilapi.com.br/api/cep/v2/\"\n})\n\nasync function getCepData(cep) {\n    try {\n        const response = await BrasilCepApi.get(cep)\n\n        return {\n            succeeded: true,\n            data: response.data\n        }\n    } catch(e) {\n        return {\n            succeeded: false,\n            message: e.message\n        }\n    }\n}\n\nexport {\n    getCepData\n}","import { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport Lottie from \"react-lottie\";\nimport animation from \"../../assets/addressMeditation.json\";\nimport loadingAnimation from \"../../assets/loadingBallAnimation.json\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport { useState, useEffect } from \"react\";\nimport { getCepData } from \"../../services/brasilApi\";\nimport Alert from \"../Alert\";\n\nexport default function AddressCard({ setSelectionStage, setPrevData, prevData, forceLoading }) {\n    const [ blockChanges, setBlockChanges ] = useState(false)\n    const [ alertActive, setAlertActive ] = useState(false)\n    const [ alertMessage, setAlertMessage ] = useState(\"\")\n    const [ isLoading, setIsLoading ] = useState(false)\n    const [ addressee, setAddressee ] = useState(prevData.addressCard.addressee || \"\")\n    const [ address, setAddress ] = useState(prevData.addressCard.address || \"\")\n    const [ cep, setCep ] = useState(prevData.addressCard.cep || \"\")\n    const [ city, setCity ] = useState(prevData.addressCard.city || \"\")\n    const [ uf, setUf ] = useState(prevData.addressCard.addressee || \"PB\")\n    const [ complement, setComplement ] = useState(prevData.addressCard.addressee || \"\")\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: isLoading || forceLoading ? loadingAnimation : animation,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n\n    useEffect(() => () => setPrevData(prev => ({\n        ...prev,\n        addressCard: {\n            addressee,\n            address,\n            cep,\n            city,\n            uf,\n            complement\n        }\n    })), [ addressee, address, cep, city, uf, complement, setPrevData ])\n\n    function searchCep(cep) {\n        if(cep.length !== 8) return;\n        setIsLoading(true)\n        getCepData(cep)\n            .then(result => {\n                if(!result.succeeded) {\n                    setAlertMessage(\"Nossa aura não detectou esse CEP\")\n                    setAlertActive(true)\n                    setBlockChanges(false)\n                    setIsLoading(false)\n                    return;\n                }\n                setUf(result.data.state)\n                setCity(result.data.city)\n                setAddress(result.data.street.length ? `${result.data.street}, ${result.data.neighborhood}` : \"\" )\n                setBlockChanges(true)\n                setIsLoading(false)\n            })\n    }\n\n    return (\n        <AddressCardContainer\n            layout\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1, transition: { duration: .12, delay: .12 } }}\n            exit={{ opacity: 0, transition: { duration: .18 } }}\n        >\n            <UpperSection>\n                <Lottie\n                    options={defaultOptions}\n                    width={\"100%\"}\n                    height={\"inherit\"}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            </UpperSection>\n\n            <div>\n                <input \n                    type=\"text\"\n                    placeholder=\"Nome Completo\"\n                    onChange={ e => setAddressee(e.target.value) }\n                    disabled={isLoading}\n                    value={addressee}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"CEP\"\n                    onChange={ e => {\n                        if(e.target.value.length > 8) return;\n                        searchCep(e.target.value)\n                        setCep(e.target.value)\n                    }}\n                    disabled={isLoading}\n                    value={cep}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Endereço de Entrega\"\n                    onChange={ e => setAddress(e.target.value) }\n                    disabled={isLoading || address.length !== 0}\n                    value={address}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Complemento\"\n                    onChange={ e => setComplement(e.target.value) }\n                    disabled={isLoading}\n                    value={complement}\n                />\n                <div className=\"CityState\">\n                    <input \n                        type=\"text\"\n                        placeholder=\"Cidade\"\n                        onChange={ e => setCity(e.target.value) }\n                        disabled={isLoading || blockChanges}\n                        value={city}\n                    />\n                    <select name=\"UF\" defaultValue={uf} disabled={isLoading || blockChanges}  onChange={e => setUf(e.target.value)} >\n                        <option value=\"AC\">AC</option>\n                        <option value=\"AL\">AL</option>\n                        <option value=\"AM\">AM</option>\n                        <option value=\"AP\">AP</option>\n                        <option value=\"BA\">BA</option>\n                        <option value=\"CE\">CE</option>\n                        <option value=\"DF\">DF</option>\n                        <option value=\"ES\">ES</option>\n                        <option value=\"GO\">GO</option>\n                        <option value=\"MA\">MA</option>\n                        <option value=\"MG\">MG</option>\n                        <option value=\"MS\">MS</option>\n                        <option value=\"MT\">MT</option>\n                        <option value=\"PA\">PA</option>\n                        <option value=\"PB\">PB</option>\n                        <option value=\"PE\">PE</option>\n                        <option value=\"PI\">PI</option>\n                        <option value=\"PR\">PR</option>\n                        <option value=\"RJ\">RJ</option>\n                        <option value=\"RN\">RN</option>\n                        <option value=\"RO\">RO</option>\n                        <option value=\"RR\">RR</option>\n                        <option value=\"RS\">RS</option>\n                        <option value=\"SC\">SC</option>\n                        <option value=\"SE\">SE</option>\n                        <option value=\"SP\">SP</option>\n                        <option value=\"TO\">TO</option>\n                    </select>\n                </div>\n            </div>\n\n            <AiOutlineArrowLeft size={30} color=\"#4D65A8\" onClick={() => {\n                setSelectionStage(0)\n            }}/>\n            <Alert isOpen={alertActive} toggle={setAlertActive} message={alertMessage} />\n        </AddressCardContainer>\n    )\n}\n\nconst AddressCardContainer = styled(motion.div)`\n    background-color: #fff;\n    width: 100%;\n    border-radius: 10px;\n    padding: 0px 20px 10px 20px;\n    margin-bottom: 20px;\n    \n    >div {\n        >input {\n            width: 100%;\n            border-radius: 5px;\n            margin-bottom: 10px;\n            border: none;\n            background-color: rgba(224, 209, 237, 0.62);\n            padding: 17px;\n            color: #4D65A8;\n            font-size: 14px;\n            ::placeholder {\n                color: #4D65A8;\n                font-size: 16px;\n                font-weight: 600;\n            }\n        }\n\n        .CityState {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n\n            >input {\n                width: 65%;\n                border-radius: 5px;\n                margin-bottom: 10px;\n                border: none;\n                background-color: rgba(224, 209, 237, 0.62);\n                padding: 17px;\n                color: #4D65A8;\n                font-size: 14px;\n                ::placeholder {\n                    color: #4D65A8;\n                    font-size: 16px;\n                    font-weight: 600;\n                }\n            }\n\n            >select {\n                width: 30%;\n                border-radius: 5px;\n                margin-bottom: 10px;\n                border: none;\n                background-color: rgba(224, 209, 237, 0.62);\n                padding: 17px;\n                color: #4D65A8;\n                font-size: 14px;\n                font-weight: 600;\n            }\n        }\n    }\n`\n\nconst UpperSection = styled.div`\n    width: 100%;\n    pointer-events: none;\n\n    >svg {\n        pointer-events: none;\n    }\n`\n\n","import { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport { PlansContainer } from \"../../sharedStyles\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport LoadingPage from \"../LoadingPage\";\nimport UserContext from \"../context/UserContext\";\nimport { useParams } from \"react-router-dom\";\nimport SignCard from \"./SignCard\";\nimport AddressCard from \"./AddressCard\";\nimport Validate from \"../../services/validate\";\nimport Alert from \"../Alert\";\nimport Spinner from \"../Spinner\";\nimport Signature from \"../../services/signature\";\n\nexport default function Subscribe() {\n    const [ isLoadingLocally, setIsLoadingLocally ] = useState(false)\n    const [ alertManagementData, setAlertManagementData ] = useState({ isActive: false, message: \"\" })\n    const navigate = useNavigate();\n    const { userData, isLoading } = useContext(UserContext)\n    const [ selectionStage, setSelectionStage ] = useState(0)\n    const [ prevData, setPrevData ] = useState({ signCard: {}, addressCard: {} })\n    const { type } = useParams();\n\n    useEffect(() => {\n        if(!isLoading && !userData.token) navigate(\"/auth/log\")\n    }, [ navigate, userData, isLoading ])\n\n    function submitSignatureRequest() {\n        setIsLoadingLocally(true)\n        const mapableProducts = Object.keys(prevData.signCard.products)\n\n        const body = {\n            userId: userData.id,\n            addressee: prevData.addressCard.addressee,\n            planId: prevData.signCard.planType === \"weekly\" ? 1 : 2,\n            cep: prevData.addressCard.cep,\n            day: prevData.signCard.deliveryDay,\n            complement: prevData.addressCard.complement,\n            productId: mapableProducts.map(key => {\n                if(prevData.signCard.products[key].selected) return prevData.signCard.products[key].productId\n                return null;\n            }).filter(Boolean),\n        }\n\n        const validationBody = { ...body }\n        delete validationBody.complement\n        const emptinessValidation = Validate.emptyness(validationBody)\n        if(!emptinessValidation.isValid) {\n            setAlertManagementData({\n                isActive: true,\n                message: \"Preencha todos os campos obrigatórios\"\n            })\n            setIsLoadingLocally(false)\n            return;\n        }\n        if(body.cep.length !== 8) {\n            setAlertManagementData({\n                isActive: true,\n                message: \"Esse CEP não existe\"\n            })\n            setIsLoadingLocally(false)\n            return;\n        }\n\n        Signature.submit(userData.token, body)\n            .then(res => {\n                if(!res.succeeded) {\n                    setAlertManagementData({\n                        isActive: true,\n                        message: res.message\n                    })\n                    setIsLoadingLocally(false)\n                } else {\n                    \n                    navigate(\"/signatures\")\n                }\n            })\n    }\n\n    if(isLoading || !userData.token) return <LoadingPage />\n\n    return (\n        <PlansContainer>\n            <h1>{`Bom te ver por aqui, ${userData.name.split(\" \")[0]}`}</h1>\n            <h2>\"Agradecer é a arte de atrair coisas boas\"</h2>\n            \n            <AnimateSharedLayout>{\n                selectionStage\n                    ? <AnimatePresence><AddressCard key={2} setSelectionStage={setSelectionStage} prevData={prevData} setPrevData={setPrevData} forceLoading={isLoadingLocally} /></AnimatePresence>\n                    : <AnimatePresence><SignCard key={1} type={type} prevData={prevData} setPrevData={setPrevData} /></AnimatePresence>\n            }</AnimateSharedLayout>\n\n            <NextButton\n                whileTap={{ scale: 0.98, backgroundColor: \"#6D7CE4\" }}\n                onClick={() => {\n                    if(selectionStage) {\n                        submitSignatureRequest()\n                    } else {\n                        setSelectionStage(prev => prev + 1)\n                    }\n                }}\n            >{\n                isLoadingLocally\n                    ? <Spinner color=\"#fff\" size={20} />\n                    : selectionStage ? \"Finalizar\" : \"Próximo\"\n            }</NextButton>\n            <Alert \n                isOpen={alertManagementData.isActive}\n                message={alertManagementData.message}\n                toggle={(boolean) => setAlertManagementData(prev => ({\n                    ...prev,\n                    isActive: boolean }))} />\n        </PlansContainer>\n    )\n}\n\nconst NextButton = styled(motion.button)`\n    height: 40px;\n    width: 160px;\n    border: none;\n    background-color: #8C97EA;\n    border-radius: 5px;\n    color: #fff;\n    font-size: 1.2rem;\n    font-weight: 600;\n    text-shadow: 1px 1px #fff;\n    box-shadow: 3px 3px #7c89dd;\n    align-self: center;\n`","import dayjs from \"dayjs\";\n\nconst Utils = {\n    formatDate,\n    getNextDayOfTheWeek,\n    calculateNextDeliveryDay\n}\n\nfunction formatDate(inputDate) {\n    const date = dayjs(inputDate).format('YYYY-MM-DD')\n    const splitted = date.split(\"-\");\n    const newDate = splitted[2] + \"/\" + splitted[1] + \"/\" + splitted[0];\n    return newDate\n}\n\n//https://stackoverflow.com/questions/33078406/getting-the-date-of-next-monday\nfunction getNextDayOfTheWeek(dayName, excludeToday = true, refDate = new Date()) {\n    const dayOfWeek = [\"sun\",\"mon\",\"tue\",\"wed\",\"thu\",\"fri\",\"sat\"]\n                      .indexOf(dayName.slice(0,3).toLowerCase());\n    if (dayOfWeek < 0) return;\n\n    refDate.setHours(0,0,0,0);\n    refDate.setDate(\n        refDate.getDate() + +!!excludeToday + (dayOfWeek + 7 - refDate.getDay() - +!!excludeToday) % 7\n    );\n    return refDate;\n}\n\nfunction calculateNextDeliveryDay(referenceObj, deliveryDay) {\n    const reference = new Date(referenceObj)\n    let nextDeliveryDay\n    // delivery day of current month already passed?\n    if(reference.getDate() >= deliveryDay) {\n        if(reference.getMonth() === 11) {         \n            nextDeliveryDay = new Date(reference.getFullYear()+1, 0, deliveryDay)        \n        } else {      \n            nextDeliveryDay = new Date(reference.getFullYear(), reference.getMonth()+1, deliveryDay)           \n        }\n    } else {       \n        nextDeliveryDay = new Date(reference.getFullYear(), reference.getMonth(), deliveryDay)        \n    }\n    return nextDeliveryDay\n}\n\n\n\nexport default Utils;","import styled from \"styled-components\";\nimport Lottie from \"react-lottie\";\nimport { motion } from \"framer-motion\";\nimport Utils from \"../../utils/utils\";\n\nexport default function UserSignatureCard({ jsonAnimation, signature }) {\n    const defaultOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: jsonAnimation,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n    };\n\n    function calculateNextDeliveries() {\n        let first;\n        let second;\n        let third;\n        const today = new Date();\n        const days = [ \"Monday\", \"Wednesday\", \"Friday\" ]\n        const monthDays = {\n            \"0\": 1,\n            \"1\": 10,\n            \"2\": 20\n        }\n\n        const dayName = days[Number(signature.day)]\n        const monthDay = monthDays[signature.day]\n\n        if(signature.type === \"s\") {\n            first = Utils.getNextDayOfTheWeek(dayName, true)\n            second = Utils.getNextDayOfTheWeek(dayName, true, new Date(first))\n            third = Utils.getNextDayOfTheWeek(dayName, true, new Date(second))\n        } else {\n            first = Utils.calculateNextDeliveryDay(today, monthDay)\n            second = Utils.calculateNextDeliveryDay(first, monthDay)\n            third = Utils.calculateNextDeliveryDay(second, monthDay)\n        }\n\n        const results = [\n            first,\n            second,\n            third,\n        ]\n\n        return results.map(date => {\n            const thisDate = date\n            if(date.getDay() === 0) {\n                const newDate = thisDate.setDate(thisDate.getDate() + 1)\n                return Utils.formatDate(newDate)\n            }\n            if(date.getDay() === 6) {\n                const newDate = thisDate.setDate(thisDate.getDate() + 2)\n                return Utils.formatDate(newDate)\n            }\n            return Utils.formatDate(date)\n        })\n    }\n\n    return (\n        <PlanCardContainer whileHover={{ scale: 1.06 }}>\n            <div>\n                <Lottie\n                    options={defaultOptions}\n                    width={\"100%\"}\n                    height={\"inherit\"}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            </div>\n\n            <section>\n                <main>\n                    <p>Plano: <span>{signature.type === \"s\" ? \"Semanal\" : \"Mensal\"}</span></p>\n                    <p>Data da assinatura: <span>{Utils.formatDate(signature.created_at)}</span></p>\n                    <p className=\"Title\">Próximas Entregas:</p>\n                    {\n                        calculateNextDeliveries().map((item, index) => <p key={index} className=\"NextDelivery\">{item}</p>)\n                    }\n                </main>\n                <footer>{\n                    signature.products.map((product, index) => <p key={index} className=\"Product\">{product}</p>)\n                }</footer>\n            </section>\n        </PlanCardContainer>\n    )\n}\n\nconst PlanCardContainer = styled(motion.div)`\n    width: 100%;\n    background-color: #fff;\n    margin-bottom: 15vw;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    border-radius: 15px;\n    color: #4D65A8;\n    font-weight: 600;\n\n    >div {\n        width: 100%;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        pointer-events: none;\n\n        >svg {\n            pointer-events: none;\n            z-index: -5;\n        }\n    }\n\n    >section {\n        width: 100%;\n\n        >main {\n            width: 100%;\n\n            >p {\n                margin-bottom: 5px;\n\n                >span {\n                    color: #E63C80;\n                }\n            }\n\n            .NextDelivery {\n                color: #E63C80;\n                margin: 5px 0px 5px 20px;\n            }\n        }\n\n        >footer {\n            width: 100%;\n            display: flex;\n            justify-content: space-evenly;\n            align-items: center;\n\n            .Product {\n                color: #E63C80;\n                margin-bottom: 0px;\n                margin-top: 10px;\n            }\n        }\n    }\n`","import styled from \"styled-components\";\nimport UserContext from \"./context/UserContext\";\nimport { useContext } from \"react\";\n\nexport default function LogoutFooter() {\n    const { resetApp } = useContext(UserContext)\n\n    return (\n        <FooterContainer\n            onClick={resetApp}\n        >\n        Sair\n    </FooterContainer>\n    )\n}\n\nconst FooterContainer = styled.button`\n    background-color: #E63C80;\n    bottom: 0;\n    left: 0;\n    width: 120px;\n    padding: 10px;\n    color: #fff;\n    font-weight: 700;\n    font-size: 1.2rem;\n    border: none;\n    border-radius: 5px;\n    text-align: center;\n`","import UserSignatureCard from \"./UserSignatureCard\"\nimport { useContext, useEffect } from \"react\"\nimport UserContext from \"../context/UserContext\"\nimport { useNavigate } from \"react-router\";\nimport { PlansContainer } from \"../../sharedStyles\";\nimport LoadingPage from \"../LoadingPage\";\nimport animation from \"../../assets/signaturesMeditation.json\";\nimport LogoutFooter from \"../LogoutFooter\";\nimport { Link } from \"react-router-dom\";\n\nexport default function UserSignature() {\n    const navigate = useNavigate()\n    const { signatureData, isLoading, userData } = useContext(UserContext)\n\n    useEffect(() => {\n        if(!isLoading && !userData.token) navigate(\"/auth/log\")\n    }, [ navigate, userData, isLoading, signatureData ])\n\n    if(isLoading || !userData.token || !signatureData.length) return <LoadingPage />\n\n    return (\n        <PlansContainer>\n            <h1>{`Bom te ver por aqui, ${userData.name?.split(\" \")[0]}`}</h1>\n            <h2>{\n                signatureData.length \n                    ? '\"Agradecer é a arte de atrair coisas boas\"'\n                    : \"Você não possui assinaturas ainda\"\n            }</h2>\n\n            {\n                signatureData.map(signature => (\n                    <UserSignatureCard key={signature.id} jsonAnimation={animation} signature={signature}  />\n                ))\n            }\n\n            {\n                signatureData.length\n                    ? <LogoutFooter />\n                    : <Link to=\"/plans\">Voltar</Link>\n            }\n            \n        </PlansContainer>\n    )\n}\n\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport LandingPage from \"./components/LandingPage\";\nimport Auth from \"./components/Auth\";\nimport { UserProvider } from \"./components/context/UserContext\";\nimport Plans from \"./components/Plans\";\nimport LoadingScreen from \"./components/LoadingPage\";\nimport Subscribe from \"./components/Subscribe\";\nimport UserSignature from \"./components/UserSignatures\";\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <UserProvider>\n        <Routes>\n          <Route exact path=\"/\" element={<LandingPage />} />\n          <Route exact path=\"/auth/log\" element={<Auth hasAccount={true}/>} />\n          <Route exact path=\"/auth/sign\" element={<Auth hasAccount={false}/>} />\n          <Route exact path=\"/plans\" element={<Plans />} />\n          <Route path=\"/subscribe/:type\" element={<Subscribe />}/>\n          <Route exact path=\"/signatures/\" element={<UserSignature />} />\n          <Route exact path=\"/loading\" element={<LoadingScreen />} />\n        </Routes>\n      </UserProvider>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./sharedStyles/reset.css\";\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}